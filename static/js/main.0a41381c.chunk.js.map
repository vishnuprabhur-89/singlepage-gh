{"version":3,"sources":["plan.jpg","App.js","reportWebVitals.js","index.js"],"names":["SinglePage","React","useState","dateObj","setDateObj","useEffect","timeinterval","setInterval","updateTimer","total","clearInterval","Date","parse","seconds","Math","floor","minutes","hours","days","className","id","style","display","src","Plan","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,MAA0B,iC,eCwC1BA,EApCI,WACjB,IADuB,EAEOC,IAAMC,SAAS,IAFtB,mBAEhBC,EAFgB,KAEPC,EAFO,KAGvBC,qBAAU,WACR,IAAMC,EAAeC,aAAY,WAC/BH,EAAWI,KACPA,IAAcC,OAAS,GACzBC,cAAcJ,KAEf,QAGL,IAAME,EAAc,WAClB,IAAMC,EAAQE,KAAKC,MAZJ,cAYsBD,KAAKC,MAAM,IAAID,MAC9CE,EAAUC,KAAKC,MAAON,EAAQ,IAAQ,IACtCO,EAAUF,KAAKC,MAAON,EAAQ,IAAO,GAAM,IAC3CQ,EAAQH,KAAKC,MAAON,EAAK,KAAuB,IAEtD,MAAO,CAAES,KADIJ,KAAKC,MAAMN,EAAK,OACdQ,QAAOD,UAASH,UAASJ,UAE1C,OACE,qBAAKU,UAAU,MAAMC,GAAG,OAAxB,SACE,yBAAQD,UAAU,aAAlB,UACE,wDACA,sBAAKE,MAAO,CAAEC,QAAS,QAAvB,UACE,mDAAanB,QAAb,IAAaA,OAAb,EAAaA,EAASe,KAAtB,OACA,oDAAcf,QAAd,IAAcA,OAAd,EAAcA,EAASc,MAAvB,OACA,sDAAgBd,QAAhB,IAAgBA,OAAhB,EAAgBA,EAASa,QAAzB,OACA,sDAAgBb,QAAhB,IAAgBA,OAAhB,EAAgBA,EAASU,QAAzB,UAEF,qBAAKU,IAAKC,EAAML,UAAU,WAAWM,IAAI,eCtBlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0a41381c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plan.e6bd44e0.jpg\";","import Plan from './plan.jpg';\nimport React, { useEffect } from 'react';\nimport './App.css';\n\nconst SinglePage = () => {\n  const deadline = '2021-10-31';\n  const [dateObj, setDateObj] = React.useState({});\n  useEffect(() => {\n    const timeinterval = setInterval(() => {\n      setDateObj(updateTimer())\n      if (updateTimer().total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }, 1000);\n\n  })\n  const updateTimer = () => {\n    const total = Date.parse(deadline) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    return { days, hours, minutes, seconds, total };\n  }\n  return (\n    <div className=\"App\" id=\"time\">\n      <header className=\"App-header\">\n        <p>Time is most precious.!</p>\n        <div style={{ display: \"flex\" }}>\n          <h3>{`Days ${dateObj?.days} `}</h3>\n          <h3>{`Hours ${dateObj?.hours} `}</h3>\n          <h3>{`Minutes ${dateObj?.minutes} `}</h3>\n          <h3>{`Seconds ${dateObj?.seconds} `}</h3>\n        </div>\n        <img src={Plan} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default SinglePage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}